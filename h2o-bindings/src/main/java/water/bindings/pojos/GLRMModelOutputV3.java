/*
 * This file is auto-generated by h2o-3/h2o-bindings/bin/gen_java.py
 * Copyright 2016 H2O.ai;  Apache License Version 2.0 (see LICENSE for details)
 */
package water.bindings.pojos;

import com.google.gson.Gson;
import com.google.gson.annotations.*;


public class GLRMModelOutputV3 extends ModelOutputSchemaV3 {

    /**
     * Number of iterations executed
     */
    public int iterations;

    /**
     * Number of updates executed
     */
    public int updates;

    /**
     * Current value of the objective function
     */
    public double objective;

    /**
     * Average change in objective value on final iteration
     */
    @SerializedName("avg_change_obj")
    public double avgChangeObj;

    /**
     * Final step size
     */
    @SerializedName("step_size")
    public double stepSize;

    /**
     * Mapping from lower dimensional k-space to training features (Y)
     */
    public TwoDimTableV3 archetypes;

    /**
     * Singular values of XY matrix
     */
    @SerializedName("singular_vals")
    public double[] singularVals;

    /**
     * Eigenvectors of XY matrix
     */
    public TwoDimTableV3 eigenvectors;

    /**
     * Frame key name for X matrix
     */
    @SerializedName("representation_name")
    public String representationName;

    /**
     * Standard deviation and importance of each principal component
     */
    public TwoDimTableV3 importance;


    /*------------------------------------------------------------------------------------------------------------------
    //                                                  INHERITED
    //------------------------------------------------------------------------------------------------------------------

    // Column names
    public String[] names;

    // Domains for categorical columns
    public String[][] domains;

    // Cross-validation models (model ids)
    public ModelKeyV3[] crossValidationModels;

    // Cross-validation predictions, one per cv model (deprecated, use cross_validation_holdout_predictions_frame_id
    // instead)
    public FrameKeyV3[] crossValidationPredictions;

    // Cross-validation holdout predictions (full out-of-sample predictions on training data)
    public FrameKeyV3 crossValidationHoldoutPredictionsFrameId;

    // Cross-validation fold assignment (each row is assigned to one holdout fold)
    public FrameKeyV3 crossValidationFoldAssignmentFrameId;

    // Category of the model (e.g., Binomial)
    public ModelCategory modelCategory;

    // Model summary
    public TwoDimTableV3 modelSummary;

    // Scoring history
    public TwoDimTableV3 scoringHistory;

    // Training data model metrics
    public ModelMetricsBaseV3 trainingMetrics;

    // Validation data model metrics
    public ModelMetricsBaseV3 validationMetrics;

    // Cross-validation model metrics
    public ModelMetricsBaseV3 crossValidationMetrics;

    // Cross-validation model metrics summary
    public TwoDimTableV3 crossValidationMetricsSummary;

    // Job status
    public String status;

    // Start time in milliseconds
    public long startTime;

    // End time in milliseconds
    public long endTime;

    // Runtime in milliseconds
    public long runTime;

    // Help information for output fields
    public Map<String,String> help;

    */

    /**
     * Public constructor
     */
    public GLRMModelOutputV3() {
        iterations = 0;
        updates = 0;
        objective = 0.0;
        avgChangeObj = 0.0;
        stepSize = 0.0;
        representationName = "";
        status = "";
        startTime = 0L;
        endTime = 0L;
        runTime = 0L;
    }

    /**
     * Return the contents of this object as a JSON String.
     */
    @Override
    public String toString() {
        return new Gson().toJson(this);
    }

}
