/*
 * This file is auto-generated by h2o-3/h2o-bindings/bin/gen_java.py
 * Copyright 2016 H2O.ai;  Apache License Version 2.0 (see LICENSE for details)
 */
package water.bindings.pojos;

import com.google.gson.Gson;
import com.google.gson.annotations.*;
import java.util.Map;


public class H2OErrorV3 extends SchemaV3 {

    /**
     * Milliseconds since the epoch for the time that this H2OError instance was created.  Generally this is a short
     * time since the underlying error ocurred.
     */
    public long timestamp;

    /**
     * Error url
     */
    @SerializedName("error_url")
    public String errorUrl;

    /**
     * Message intended for the end user (a data scientist).
     */
    public String msg;

    /**
     * Potentially more detailed message intended for a developer (e.g. a front end engineer or someone designing a
     * language binding).
     */
    @SerializedName("dev_msg")
    public String devMsg;

    /**
     * HTTP status code for this error.
     */
    @SerializedName("http_status")
    public int httpStatus;

    /**
     * Any values that are relevant to reporting or handling this error.  Examples are a key name if the error is on a
     * key, or a field name and object name if it's on a specific field.
     */
    public Map<String,Object> values;

    /**
     * Exception type, if any.
     */
    @SerializedName("exception_type")
    public String exceptionType;

    /**
     * Raw exception message, if any.
     */
    @SerializedName("exception_msg")
    public String exceptionMsg;

    /**
     * Stacktrace, if any.
     */
    public String[] stacktrace;

    /**
     * Public constructor
     */
    public H2OErrorV3() {
        timestamp = 0L;
        errorUrl = "";
        msg = "";
        devMsg = "";
        httpStatus = 0;
        exceptionType = "";
        exceptionMsg = "";
    }

    /**
     * Return the contents of this object as a JSON String.
     */
    @Override
    public String toString() {
        return new Gson().toJson(this);
    }

}
