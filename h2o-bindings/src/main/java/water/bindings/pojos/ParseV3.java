/*
 * This file is auto-generated by h2o-3/h2o-bindings/bin/gen_java.py
 * Copyright 2016 H2O.ai;  Apache License Version 2.0 (see LICENSE for details)
 */
package water.bindings.pojos;

import com.google.gson.GsonBuilder;
import com.google.gson.annotations.*;


public class ParseV3 extends RequestSchemaV3 {

    /**
     * Final frame name
     */
    @SerializedName("destination_frame")
    public FrameKeyV3 destinationFrame;

    /**
     * Source frames
     */
    @SerializedName("source_frames")
    public FrameKeyV3[] sourceFrames;

    /**
     * Parser type
     */
    @SerializedName("parse_type")
    public ApiParseTypeValuesProvider parseType;

    /**
     * Field separator
     */
    public byte separator;

    /**
     * Single Quotes
     */
    @SerializedName("single_quotes")
    public boolean singleQuotes;

    /**
     * Check header: 0 means guess, +1 means 1st line is header not data, -1 means 1st line is data not header
     */
    @SerializedName("check_header")
    public int checkHeader;

    /**
     * Number of columns
     */
    @SerializedName("number_columns")
    public int numberColumns;

    /**
     * Column names
     */
    @SerializedName("column_names")
    public String[] columnNames;

    /**
     * Value types for columns
     */
    @SerializedName("column_types")
    public String[] columnTypes;

    /**
     * Domains for categorical columns
     */
    public String[][] domains;

    /**
     * NA strings for columns
     */
    @SerializedName("na_strings")
    public String[][] naStrings;

    /**
     * Size of individual parse tasks
     */
    @SerializedName("chunk_size")
    public int chunkSize;

    /**
     * Delete input key after parse
     */
    @SerializedName("delete_on_done")
    public boolean deleteOnDone;

    /**
     * Block until the parse completes (as opposed to returning early and requiring polling
     */
    public boolean blocking;

    /**
     * Key-reference to an initialized instance of a Decryption Tool
     */
    @SerializedName("decrypt_tool")
    public DecryptionToolKeyV3 decryptTool;

    /**
     * Parse job
     */
    public JobV3 job;

    /**
     * Rows
     */
    public long rows;


    /*------------------------------------------------------------------------------------------------------------------
    //                                                  INHERITED
    //------------------------------------------------------------------------------------------------------------------

    // Comma-separated list of JSON field paths to exclude from the result, used like:
    // "/3/Frames?_exclude_fields=frames/frame_id/URL,__meta"
    public String _excludeFields;

    */

    /**
     * Public constructor
     */
    public ParseV3() {
        separator = 0;
        singleQuotes = false;
        checkHeader = 0;
        numberColumns = 0;
        chunkSize = 0;
        deleteOnDone = false;
        blocking = false;
        rows = 0L;
        _excludeFields = "";
    }

    /**
     * Return the contents of this object as a JSON String.
     */
    @Override
    public String toString() {
        return new GsonBuilder().serializeSpecialFloatingPointValues().create().toJson(this);
    }

}
